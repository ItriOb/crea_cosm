[2023-03-13T09:48:49.528000+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T09:51:38.558086+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:5000/login"" at /var/www/html/creacosm/vendor/symfony/http-kernel/EventListener/RouterListener.php line 127 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:5000/login\" at /var/www/html/creacosm/vendor/symfony/http-kernel/EventListener/RouterListener.php:127)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/login/\". at /var/www/html/creacosm/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2023-03-13T09:51:40.748617+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"812178"},"request_uri":"http://localhost:5000/_wdt/812178","method":"GET"} []
[2023-03-13T09:51:42.550132+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:5000/"" at /var/www/html/creacosm/vendor/symfony/http-kernel/EventListener/RouterListener.php line 127 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:5000/\" at /var/www/html/creacosm/vendor/symfony/http-kernel/EventListener/RouterListener.php:127)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/creacosm/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-03-13T09:51:43.325825+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1bb785"},"request_uri":"http://localhost:5000/_wdt/1bb785","method":"GET"} []
[2023-03-13T09:55:43.454749+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T09:57:21.279166+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:01:45.633190+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:03:44.232126+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:04:24.940894+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:18:35.493855+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:23:37.855197+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:23:52.294775+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:28:16.658570+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:29:40.343047+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:36:10.689381+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/html/creacosm/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-03-13T10:39:10.310964+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"app","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"15","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"app","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"15","charset":"utf8"}} []
[2023-03-13T10:39:10.314947+00:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at "127.0.0.1", port 5432 failed: Connection refused 	Is the server running on that host and accepting TCP/IP connections?" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/creacosm/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/creacosm/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections? at /var/www/html/creacosm/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?"} []
[2023-03-13T10:39:10.315286+00:00] console.DEBUG: Command "make:migration" exited with code "7" {"command":"make:migration","code":7} []
[2023-03-13T10:46:21.140924+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"database","port":5432,"user":"user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"dbcreacosm","serverVersion":"15","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"database","port":5432,"user":"user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"dbcreacosm","serverVersion":"15","charset":"utf8"}} []
[2023-03-13T10:46:21.172797+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-03-13T10:46:21.176123+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"dbcreacosm"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"dbcreacosm"},"types":{"1":2}} []
[2023-03-13T10:46:21.185888+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-03-13T10:46:21.186289+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"dbcreacosm"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"dbcreacosm"},"types":{"1":2}} []
[2023-03-13T10:46:21.190096+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2023-03-13T10:46:21.191756+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-03-13T10:46:21.192231+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'dbcreacosm'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'dbcreacosm'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2023-03-13T10:46:21.194565+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-03-13T10:46:21.194873+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-03-13T10:46:21.201974+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-03-13T10:46:21.204690+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-03-13T10:46:21.206963+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-03-13T10:46:21.209293+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-03-13T10:46:21.227522+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-03-13T10:46:21.243205+00:00] doctrine.INFO: Disconnecting [] []
[2023-03-13T10:46:21.243365+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-03-13T10:46:21.243661+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-03-13T10:46:30.862897+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"database","port":5432,"user":"user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"dbcreacosm","serverVersion":"15","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"database","port":5432,"user":"user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"dbcreacosm","serverVersion":"15","charset":"utf8"}} []
[2023-03-13T10:46:30.881879+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-03-13T10:46:31.761407+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-03-13T10:46:31.763277+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"dbcreacosm"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"dbcreacosm"},"types":{"1":2}} []
[2023-03-13T10:46:31.787975+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2023-03-13T10:46:31.804661+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-03-13T10:46:31.806122+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-03-13T10:46:31.806730+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-03-13T10:46:31.812239+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-03-13T10:46:31.815106+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE critere_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE critere_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.816794+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE format_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE format_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.817708+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE question_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE question_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.818495+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE repondre_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE repondre_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.819234+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE reponse_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE reponse_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.819860+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE sondage_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE sondage_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.820474+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE statistique_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE statistique_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.820946+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE theme_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE theme_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.821433+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE type_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE type_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.822000+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE utilisateur_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE utilisateur_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.822399+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE visuel_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE visuel_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-03-13T10:46:31.822767+00:00] doctrine.DEBUG: Executing query: CREATE TABLE critere (id INT NOT NULL, critere VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE critere (id INT NOT NULL, critere VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.825404+00:00] doctrine.DEBUG: Executing query: CREATE TABLE format (id INT NOT NULL, format VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE format (id INT NOT NULL, format VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.827984+00:00] doctrine.DEBUG: Executing query: CREATE TABLE question (id INT NOT NULL, type_id INT NOT NULL, visuel_id INT DEFAULT NULL, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE question (id INT NOT NULL, type_id INT NOT NULL, visuel_id INT DEFAULT NULL, intitule VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.831026+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_B6F7494EC54C8C93 ON question (type_id) {"sql":"CREATE INDEX IDX_B6F7494EC54C8C93 ON question (type_id)"} []
[2023-03-13T10:46:31.833090+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_B6F7494E9559EF01 ON question (visuel_id) {"sql":"CREATE INDEX IDX_B6F7494E9559EF01 ON question (visuel_id)"} []
[2023-03-13T10:46:31.835420+00:00] doctrine.DEBUG: Executing query: CREATE TABLE repondre (id INT NOT NULL, utilisateur_id INT NOT NULL, question_id INT NOT NULL, reponse VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE repondre (id INT NOT NULL, utilisateur_id INT NOT NULL, question_id INT NOT NULL, reponse VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.839056+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_F66FAAF4FB88E14F ON repondre (utilisateur_id) {"sql":"CREATE INDEX IDX_F66FAAF4FB88E14F ON repondre (utilisateur_id)"} []
[2023-03-13T10:46:31.840953+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_F66FAAF41E27F6BF ON repondre (question_id) {"sql":"CREATE INDEX IDX_F66FAAF41E27F6BF ON repondre (question_id)"} []
[2023-03-13T10:46:31.842973+00:00] doctrine.DEBUG: Executing query: CREATE TABLE reponse (id INT NOT NULL, question_id INT NOT NULL, reponse VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE reponse (id INT NOT NULL, question_id INT NOT NULL, reponse VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.845451+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_5FB6DEC71E27F6BF ON reponse (question_id) {"sql":"CREATE INDEX IDX_5FB6DEC71E27F6BF ON reponse (question_id)"} []
[2023-03-13T10:46:31.847411+00:00] doctrine.DEBUG: Executing query: CREATE TABLE sondage (id INT NOT NULL, createur_id INT NOT NULL, nom VARCHAR(255) NOT NULL, introduction VARCHAR(255) NOT NULL, visibilite BOOLEAN NOT NULL, datecreation DATE NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE sondage (id INT NOT NULL, createur_id INT NOT NULL, nom VARCHAR(255) NOT NULL, introduction VARCHAR(255) NOT NULL, visibilite BOOLEAN NOT NULL, datecreation DATE NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.851993+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_7579C89F73A201E5 ON sondage (createur_id) {"sql":"CREATE INDEX IDX_7579C89F73A201E5 ON sondage (createur_id)"} []
[2023-03-13T10:46:31.854038+00:00] doctrine.DEBUG: Executing query: CREATE TABLE sondage_theme (sondage_id INT NOT NULL, theme_id INT NOT NULL, PRIMARY KEY(sondage_id, theme_id)) {"sql":"CREATE TABLE sondage_theme (sondage_id INT NOT NULL, theme_id INT NOT NULL, PRIMARY KEY(sondage_id, theme_id))"} []
[2023-03-13T10:46:31.857063+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_6C1549B5BAF4AE56 ON sondage_theme (sondage_id) {"sql":"CREATE INDEX IDX_6C1549B5BAF4AE56 ON sondage_theme (sondage_id)"} []
[2023-03-13T10:46:31.859764+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_6C1549B559027487 ON sondage_theme (theme_id) {"sql":"CREATE INDEX IDX_6C1549B559027487 ON sondage_theme (theme_id)"} []
[2023-03-13T10:46:31.862774+00:00] doctrine.DEBUG: Executing query: CREATE TABLE statistique (id INT NOT NULL, sondage_id INT NOT NULL, format_id INT NOT NULL, titre VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE statistique (id INT NOT NULL, sondage_id INT NOT NULL, format_id INT NOT NULL, titre VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.867456+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_73A038ADBAF4AE56 ON statistique (sondage_id) {"sql":"CREATE INDEX IDX_73A038ADBAF4AE56 ON statistique (sondage_id)"} []
[2023-03-13T10:46:31.870337+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_73A038ADD629F605 ON statistique (format_id) {"sql":"CREATE INDEX IDX_73A038ADD629F605 ON statistique (format_id)"} []
[2023-03-13T10:46:31.873036+00:00] doctrine.DEBUG: Executing query: CREATE TABLE statistique_critere (statistique_id INT NOT NULL, critere_id INT NOT NULL, PRIMARY KEY(statistique_id, critere_id)) {"sql":"CREATE TABLE statistique_critere (statistique_id INT NOT NULL, critere_id INT NOT NULL, PRIMARY KEY(statistique_id, critere_id))"} []
[2023-03-13T10:46:31.877178+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_688F3B776A81463 ON statistique_critere (statistique_id) {"sql":"CREATE INDEX IDX_688F3B776A81463 ON statistique_critere (statistique_id)"} []
[2023-03-13T10:46:31.879841+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_688F3B79E5F45AB ON statistique_critere (critere_id) {"sql":"CREATE INDEX IDX_688F3B79E5F45AB ON statistique_critere (critere_id)"} []
[2023-03-13T10:46:31.882357+00:00] doctrine.DEBUG: Executing query: CREATE TABLE theme (id INT NOT NULL, theme VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE theme (id INT NOT NULL, theme VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.885572+00:00] doctrine.DEBUG: Executing query: CREATE TABLE type (id INT NOT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE type (id INT NOT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.888240+00:00] doctrine.DEBUG: Executing query: CREATE TABLE utilisateur (id INT NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, login VARCHAR(255) NOT NULL, motdepasse VARCHAR(255) NOT NULL, datedenaissance DATE NOT NULL, genre VARCHAR(255) NOT NULL, ville VARCHAR(255) NOT NULL, profession VARCHAR(255) DEFAULT NULL, entreprise VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE utilisateur (id INT NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, login VARCHAR(255) NOT NULL, motdepasse VARCHAR(255) NOT NULL, datedenaissance DATE NOT NULL, genre VARCHAR(255) NOT NULL, ville VARCHAR(255) NOT NULL, profession VARCHAR(255) DEFAULT NULL, entreprise VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.892786+00:00] doctrine.DEBUG: Executing query: CREATE TABLE utilisateur_sondage (utilisateur_id INT NOT NULL, sondage_id INT NOT NULL, PRIMARY KEY(utilisateur_id, sondage_id)) {"sql":"CREATE TABLE utilisateur_sondage (utilisateur_id INT NOT NULL, sondage_id INT NOT NULL, PRIMARY KEY(utilisateur_id, sondage_id))"} []
[2023-03-13T10:46:31.895171+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_F723F0DFB88E14F ON utilisateur_sondage (utilisateur_id) {"sql":"CREATE INDEX IDX_F723F0DFB88E14F ON utilisateur_sondage (utilisateur_id)"} []
[2023-03-13T10:46:31.897287+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_F723F0DBAF4AE56 ON utilisateur_sondage (sondage_id) {"sql":"CREATE INDEX IDX_F723F0DBAF4AE56 ON utilisateur_sondage (sondage_id)"} []
[2023-03-13T10:46:31.900022+00:00] doctrine.DEBUG: Executing query: CREATE TABLE visuel (id INT NOT NULL, visuel VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE visuel (id INT NOT NULL, visuel VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.902603+00:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2023-03-13T10:46:31.908381+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2023-03-13T10:46:31.910399+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2023-03-13T10:46:31.912784+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2023-03-13T10:46:31.914654+00:00] doctrine.DEBUG: Executing query: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$             BEGIN                 PERFORM pg_notify('messenger_messages', NEW.queue_name::text);                 RETURN NEW;             END;         $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n            BEGIN\n                PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n                RETURN NEW;\n            END;\n        $$ LANGUAGE plpgsql;"} []
[2023-03-13T10:46:31.916630+00:00] doctrine.DEBUG: Executing query: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2023-03-13T10:46:31.917181+00:00] doctrine.DEBUG: Executing query: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2023-03-13T10:46:31.918153+00:00] doctrine.DEBUG: Executing query: ALTER TABLE question ADD CONSTRAINT FK_B6F7494EC54C8C93 FOREIGN KEY (type_id) REFERENCES type (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE question ADD CONSTRAINT FK_B6F7494EC54C8C93 FOREIGN KEY (type_id) REFERENCES type (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.920198+00:00] doctrine.DEBUG: Executing query: ALTER TABLE question ADD CONSTRAINT FK_B6F7494E9559EF01 FOREIGN KEY (visuel_id) REFERENCES visuel (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE question ADD CONSTRAINT FK_B6F7494E9559EF01 FOREIGN KEY (visuel_id) REFERENCES visuel (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.921454+00:00] doctrine.DEBUG: Executing query: ALTER TABLE repondre ADD CONSTRAINT FK_F66FAAF4FB88E14F FOREIGN KEY (utilisateur_id) REFERENCES utilisateur (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE repondre ADD CONSTRAINT FK_F66FAAF4FB88E14F FOREIGN KEY (utilisateur_id) REFERENCES utilisateur (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.922786+00:00] doctrine.DEBUG: Executing query: ALTER TABLE repondre ADD CONSTRAINT FK_F66FAAF41E27F6BF FOREIGN KEY (question_id) REFERENCES question (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE repondre ADD CONSTRAINT FK_F66FAAF41E27F6BF FOREIGN KEY (question_id) REFERENCES question (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.923796+00:00] doctrine.DEBUG: Executing query: ALTER TABLE reponse ADD CONSTRAINT FK_5FB6DEC71E27F6BF FOREIGN KEY (question_id) REFERENCES question (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE reponse ADD CONSTRAINT FK_5FB6DEC71E27F6BF FOREIGN KEY (question_id) REFERENCES question (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.925113+00:00] doctrine.DEBUG: Executing query: ALTER TABLE sondage ADD CONSTRAINT FK_7579C89F73A201E5 FOREIGN KEY (createur_id) REFERENCES utilisateur (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE sondage ADD CONSTRAINT FK_7579C89F73A201E5 FOREIGN KEY (createur_id) REFERENCES utilisateur (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.927626+00:00] doctrine.DEBUG: Executing query: ALTER TABLE sondage_theme ADD CONSTRAINT FK_6C1549B5BAF4AE56 FOREIGN KEY (sondage_id) REFERENCES sondage (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE sondage_theme ADD CONSTRAINT FK_6C1549B5BAF4AE56 FOREIGN KEY (sondage_id) REFERENCES sondage (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.929965+00:00] doctrine.DEBUG: Executing query: ALTER TABLE sondage_theme ADD CONSTRAINT FK_6C1549B559027487 FOREIGN KEY (theme_id) REFERENCES theme (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE sondage_theme ADD CONSTRAINT FK_6C1549B559027487 FOREIGN KEY (theme_id) REFERENCES theme (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.931443+00:00] doctrine.DEBUG: Executing query: ALTER TABLE statistique ADD CONSTRAINT FK_73A038ADBAF4AE56 FOREIGN KEY (sondage_id) REFERENCES sondage (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE statistique ADD CONSTRAINT FK_73A038ADBAF4AE56 FOREIGN KEY (sondage_id) REFERENCES sondage (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.932734+00:00] doctrine.DEBUG: Executing query: ALTER TABLE statistique ADD CONSTRAINT FK_73A038ADD629F605 FOREIGN KEY (format_id) REFERENCES format (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE statistique ADD CONSTRAINT FK_73A038ADD629F605 FOREIGN KEY (format_id) REFERENCES format (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.934161+00:00] doctrine.DEBUG: Executing query: ALTER TABLE statistique_critere ADD CONSTRAINT FK_688F3B776A81463 FOREIGN KEY (statistique_id) REFERENCES statistique (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE statistique_critere ADD CONSTRAINT FK_688F3B776A81463 FOREIGN KEY (statistique_id) REFERENCES statistique (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.935576+00:00] doctrine.DEBUG: Executing query: ALTER TABLE statistique_critere ADD CONSTRAINT FK_688F3B79E5F45AB FOREIGN KEY (critere_id) REFERENCES critere (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE statistique_critere ADD CONSTRAINT FK_688F3B79E5F45AB FOREIGN KEY (critere_id) REFERENCES critere (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.937021+00:00] doctrine.DEBUG: Executing query: ALTER TABLE utilisateur_sondage ADD CONSTRAINT FK_F723F0DFB88E14F FOREIGN KEY (utilisateur_id) REFERENCES utilisateur (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE utilisateur_sondage ADD CONSTRAINT FK_F723F0DFB88E14F FOREIGN KEY (utilisateur_id) REFERENCES utilisateur (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.938580+00:00] doctrine.DEBUG: Executing query: ALTER TABLE utilisateur_sondage ADD CONSTRAINT FK_F723F0DBAF4AE56 FOREIGN KEY (sondage_id) REFERENCES sondage (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE utilisateur_sondage ADD CONSTRAINT FK_F723F0DBAF4AE56 FOREIGN KEY (sondage_id) REFERENCES sondage (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-03-13T10:46:31.940195+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20230313104621","2":"2023-03-13 10:46:31","3":127}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20230313104621","2":"2023-03-13 10:46:31","3":127},"types":{"1":2,"2":2,"3":1}} []
[2023-03-13T10:46:31.941107+00:00] doctrine.DEBUG: Committing transaction [] []
[2023-03-13T10:46:31.955071+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-03-13T10:46:31.955929+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-03-13T10:46:31.956095+00:00] doctrine.INFO: Disconnecting [] []
